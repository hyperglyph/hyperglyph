
next commits:

	spec:
		done: allow ordered dicts in places, including form args/data
		done: decimal floats
		defered: flesh out collection type - add useful methods? - postpone
			  until other things, like templates, in place.
		defered: form envelope type
			maybe mixed type, content_types other than glyph?

	python spec compliance:

		done:
			relative url handling 
			decimal floats, ordered dictionaries for form arms,
			non post handling for forms, 
			placeholders for headers, envelopes
			node removal
			allow headers in forms, links
			allow form envelope types
			allow PUT, DELETE, PATCH in forms.
		todo:
			http 1.1 server from cherrypy
			tests for all 1.0 features.

	ruby spec compliance: 
		done: avoid to_sym
		done: better ordered dictionaries
		done: decimal floats
		done: node removal
		
		todo: relative url handling
		todo: form input support, names and values
		todo: form envelope type

	post spec 1.0 python refactor?

		http 1.1 server - support OPTIONS, HEAD too.
		rename internals: glyph.client, glyph, resource, server
		move to py.test over unittest
		refactor encoder/decoder w/ dependencies & resolver / constructors
		error mapping/client error /server error
		blob support for returns, etc
			handle unknown content types as blob
			client if allow="*"
		caching headers on resources
		non glyph data support in client/server - json/html


	post 1.0 ruby - python feature parity
		todo: error mapping
		todo: blob support for clients/servers (returning/inlining)




speculative commits:
	session handler injected into forms rather than being global
		can pass in a 'null' session handler, that serializes,
		deserializes & fetches by calling directly.

glyph 1.1:
	url templates, collections

	xhtml serialization, json/hal serialization
	form

ports
	node.js
	objective-c
	erlang/riak
	jquery plugin?


different transports
	udp, openpgm, 0mq, coap?

