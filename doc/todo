
next commits:

	spec:
		done: allow ordered dicts in places, including form args/data
		done: decimal floats
		rejected: flesh out collection type - add useful methods? - postpone
			  until other things, like templates, in place.
		form envelope type
			maybe mixed type, content_types other than glyph?

	python spec compliance:

		done:
			relative url handling 
			decimal floats, ordered dictionaries for form arms,
			non post handling for forms, 
			placeholders for headers, envelopes
			node removal
		todo: 
			allow headers in forms, links
			allow form envelope types
			allow PUT, DELETE, PATCH in forms.

	post spec 1.0 python refactor?

		http 1.1 server - support OPTIONS, HEAD too.
		glyph.client, glyph, resource, server
		py.test over unittest
		new encoder/decoder w/ dependencies & resolver / constructors
		method names in method not in url mapping
		error mapping/client error /server error
		blob support for returns, etc
			handle unknown content types as blob
			client if allow="*"
		caching headers
		non glyph data support in client/server - json/html

	ruby spec compliance: 
		done: avoid to_sym
		done: better ordered dictionaries
		done: decimal floats
		done: node removal
		
		todo: relative url handling
		todo: form input support, names and values
		todo: form envelope type
		todo: error mapping

		todo: blob support for clients/servers (returning/inlining)

	when 1.0 rename to hyperglyph



speculative commits:
	session handler injected into forms rather than being global
		can pass in a 'null' session handler, that serializes,
		deserializes & fetches by calling directly.

glyph 1.1:
	url templates, collections

	xhtml serialization, json/hal serialization
	form

ports
	node.js
	objective-c
	erlang/riak
	jquery plugin?


different transports
	udp, openpgm, 0mq, coap?

